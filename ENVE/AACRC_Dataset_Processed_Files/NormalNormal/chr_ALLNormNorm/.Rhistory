x = try(1==2)
x = try(1=-2)
try(x = 1=-2)
try(x = 1=-2, silent=T)
try(x = 1==2, silent=T)
try(1==2, silent=T)
try(1==2, silent=F)
try(1==1, silent=F)
try(log("a"))
options(show.error.messages = FALSE)
try(log("a"))
print(try(log("a"), TRUE))
library(utils)
mdacc <- local({
rvers <- getRversion()
repos.hostname <-"bioinformatics.mdanderson.org"
sprintf("http://%s/OOMPA/%s",
repos.hostname,
paste(rvers$maj, rvers$min, sep="."))
})
install.packages("estimate", repos=mdacc, dependencies=TRUE)
library(utils)
mdacc <- local({
+   rvers <- getRversion()
+   repos.hostname <-"bioinformatics.mdanderson.org"
+   sprintf("http://%s/OOMPA/%s",
+           repos.hostname,
+           paste(rvers$maj, rvers$min, sep="."))
+ })
mdacc <- local({
rvers <- getRversion()
repos.hostname <-"bioinformatics.mdanderson.org"
sprintf("http://%s/OOMPA/%s",
repos.hostname,
paste(rvers$maj, rvers$min, sep="."))
})
mdacc
mdacc <- local({
rvers <- getRversion()
repos.hostname <-"bioinformatics.mdanderson.org"
sprintf("http://%s/OOMPA/%s",
repos.hostname,
paste("3"$maj, rvers$min, sep="."))
})
mdacc <- local({
rvers <- getRversion()
repos.hostname <-"bioinformatics.mdanderson.org"
sprintf("http://%s/OOMPA/%s",
repos.hostname,
paste("3",$maj, rvers$min, sep="."))
})
mdacc <- local({
rvers <- getRversion()
repos.hostname <-"bioinformatics.mdanderson.org"
sprintf("http://%s/OOMPA/%s",
repos.hostname,
paste("3",$maj,rvers$min, sep="."))
})
mdacc <- local({
rvers <- getRversion()
repos.hostname <-"bioinformatics.mdanderson.org"
sprintf("http://%s/OOMPA/%s",
repos.hostname,
paste("3.0")
})
mdacc <- local({
rvers <- getRversion()
repos.hostname <-"bioinformatics.mdanderson.org"
sprintf("http://%s/OOMPA/%s",
repos.hostname,
paste("3.0"))
})
mdacc
install.packages("estimate", repos=mdacc, dependencies=TRUE)
install.packages("~/Desktop/estimate_1.0.11.tgz", repos = NULL)
library(estimate)
estiamte
require(ggplot2)
rm(list=ls())
require(MBASED)
samples <-  as.data.frame(read.delim(file ="/Projects/MBASED/clv110_snp_bestP_PASS_tum_nor_pairs_for_mbased.txt",header=T,sep ='\t' ),row.names=NULL,col.names= T,optional = T, stringsAsFactors =F)
i <- sapply(samples, is.factor)
samples[i] <- lapply(samples[i], as.character)
View(samples)
fil_samp <- samples[,1:6]
View(fil_samp)
mySNVs <- GRanges(
seqnames=fil_samp[,2],
ranges=IRanges(start=fil_samp[,3], width=1),
aseID=fil_samp[,1],
allele1=fil_samp[,5],
allele2=fil_samp[,6]
)
names <- NULL
for(i in 1:length(fil_samp[,1]))
{
names <- rbind(names,paste(unlist(strsplit(fil_samp[i,1], split=":"))[1],fil_samp[i,2],fil_samp[i,3],sep="_"))
}
names(mySNVs) <- names
mySNVs
NorRefCount <- NULL
for(i in 1:length(samples[,1]))
{
NorRefCount <-rbind(NorRefCount,as.numeric(unlist(strsplit(unlist(strsplit(samples[i,8], split=":"))[2],split=","))[1]))
}
NorRefCount[is.na(NorRefCount)] <- 0
NorAltCount <- NULL
for(i in 1:length(samples[,1]))
{
NorAltCount <-rbind(NorAltCount,as.numeric(unlist(strsplit(unlist(strsplit(samples[i,8], split=":"))[2],split=","))[2]))
}
NorAltCount[is.na(NorAltCount)] <- 0
TumRefCount <- NULL
for(i in 1:length(samples[,1]))
{
TumRefCount <-rbind(TumRefCount,as.numeric(unlist(strsplit(unlist(strsplit(samples[i,7], split=":"))[2],split=","))[1]))
}
TumRefCount[is.na(TumRefCount)] <- 0
TumAltCount <- NULL
for(i in 1:length(samples[,1]))
{
TumAltCount <-rbind(TumAltCount,as.numeric(unlist(strsplit(unlist(strsplit(samples[i,7], split=":"))[2],split=","))[2]))
}
TumAltCount[is.na(TumAltCount)] <- 0
TumNormSample <- SummarizedExperiment(assays=list(lociAllele1Counts=matrix(c(TumRefCount,NorRefCount),ncol = 2,dimnames=list(names(mySNVs),c('tumor','normal')),
lociAllele2Counts=matrix(c(TumAltCount,NorRefCount),ncol=2,dimnames=list(names(mySNVs),c('tumor','normal'))
),
rowData=mySNVs
)
)
""
TumNormSample <- SummarizedExperiment(
assays=list(
lociAllele1Counts=matrix(
c(
TumRefCount,
NorRefCount
),
ncol = 2,
dimnames=list(
names(mySNVs),
c('tumor','normal')
)
),
lociAllele2Counts=matrix(
c(TumAltCount,
NorRefCount
),
ncol=2,
dimnames=list(
names(mySNVs),
c('tumor','normal')
)
),
rowData=mySNVs
)
""
TumNormSample <- SummarizedExperiment(
assays=list(
lociAllele1Counts=matrix(
c(
TumRefCount,
NorRefCount
),
ncol = 2,
dimnames=list(
names(mySNVs),
c('tumor','normal')
)
),
lociAllele2Counts=matrix(
c(TumAltCount,
NorRefCount
),
ncol=2,
dimnames=list(
names(mySNVs),
c('tumor','normal')
)
),
rowData=mySNVs
)
)
TumNormSample <- SummarizedExperiment(
assays=list(
lociAllele1Counts=matrix(
cbind(
TumRefCount,
NorRefCount
),
ncol = 2,
dimnames=list(
names(mySNVs),
c('tumor','normal')
)
),
lociAllele2Counts=matrix(
cbind(TumAltCount,
NorRefCount
),
ncol=2,
dimnames=list(
names(mySNVs),
c('tumor','normal')
)
),
rowData=mySNVs
)
)
TumNormSample <- SummarizedExperiment(
assays=list(
lociAllele1Counts=matrix(
cbind(
TumRefCount,
NorRefCount
),
ncol = 2,
dimnames=list(
names(mySNVs),
c('tumor','normal')
)
),
lociAllele2Counts=matrix(
cbind(TumAltCount,
NorAltCount
),
ncol=2,
dimnames=list(
names(mySNVs),
c('tumor','normal')
)
),
rowData=mySNVs
)
)
args(SummarizedExperiment)
?assays
NorRefCount <- split(NorRefCount, rep(1:ncol(NorRefCount), each = nrow(NorRefCount)))
NorAltCount <- split(NorAltCount, rep(1:ncol(NorAltCount), each = nrow(NorAltCount)))
TumAltCount <- split(TumAltCount, rep(1:ncol(TumAltCount), each = nrow(TumAltCount)))
TumRefCount <- split(TumRefCount, rep(1:ncol(TumRefCount), each = nrow(TumRefCount)))
TumNormSample <- SummarizedExperiment(
assays=list(
lociAllele1Counts=matrix(
c(
TumRefCount,
NorRefCount
),
ncol = 2,
dimnames=list(
names(mySNVs),
c('tumor','normal')
)
),
lociAllele2Counts=matrix(
c(TumAltCount,
NorAltCount
),
ncol=2,
dimnames=list(
names(mySNVs),
c('tumor','normal')
)
),
rowData=mySNVs
)
)
matrix(
c(
TumRefCount,
NorRefCount
),
ncol = 2,
dimnames=list(
names(mySNVs),
c('tumor', 'normal')
)
)
c(TumAltCount,NorAltCount)
cbind(TumAltCount,NorAltCount)
list(
names(mySNVs),
c('tumor', 'normal')
)
TumNormSample <- SummarizedExperiment(
assays=list(
lociAllele1Counts=matrix(
cbind(
TumRefCount,
NorRefCount
),
ncol = 2,
dimnames=list(
names(mySNVs),
c('tumor', 'normal')
)
),
lociAllele2Counts=matrix(
cbind(TumAltCount,
NorAltCount
),
ncol=2,
dimnames=list(
names(mySNVs),
c('tumor','normal')
)
),
rowData=mySNVs
)
)
locAll1 = matrix(cbind(
TumRefCount,
NorRefCount
))
View(locAll1)
NorAltCount <- NULL
for(i in 1:length(samples[,1]))
{
NorAltCount <-rbind(NorAltCount,as.numeric(unlist(strsplit(unlist(strsplit(samples[i,8], split=":"))[2],split=","))[2]))
}
NorAltCount[is.na(NorAltCount)] <- 0
NorRefCount <- NULL
for(i in 1:length(samples[,1]))
{
NorRefCount <-rbind(NorRefCount,as.numeric(unlist(strsplit(unlist(strsplit(samples[i,8], split=":"))[2],split=","))[1]))
}
NorRefCount[is.na(NorRefCount)] <- 0
NorRefCount <- NULL
for(i in 1:length(samples[,1]))
{
NorRefCount <-rbind(NorRefCount,as.numeric(unlist(strsplit(unlist(strsplit(samples[i,8], split=":"))[2],split=","))[1]))
}
NorRefCount[is.na(NorRefCount)] <- 0
#NorRefCount <- split(NorRefCount, rep(1:ncol(NorRefCount), each = nrow(NorRefCount)))
NorAltCount <- NULL
for(i in 1:length(samples[,1]))
{
NorAltCount <-rbind(NorAltCount,as.numeric(unlist(strsplit(unlist(strsplit(samples[i,8], split=":"))[2],split=","))[2]))
}
NorAltCount[is.na(NorAltCount)] <- 0
#NorAltCount <- split(NorAltCount, rep(1:ncol(NorAltCount), each = nrow(NorAltCount)))
TumRefCount <- NULL
for(i in 1:length(samples[,1]))
{
TumRefCount <-rbind(TumRefCount,as.numeric(unlist(strsplit(unlist(strsplit(samples[i,7], split=":"))[2],split=","))[1]))
}
TumRefCount[is.na(TumRefCount)] <- 0
#TumRefCount <- split(TumRefCount, rep(1:ncol(TumRefCount), each = nrow(TumRefCount)))
TumAltCount <- NULL
for(i in 1:length(samples[,1]))
{
TumAltCount <-rbind(TumAltCount,as.numeric(unlist(strsplit(unlist(strsplit(samples[i,7], split=":"))[2],split=","))[2]))
}
TumAltCount[is.na(TumAltCount)] <- 0
#TumAltCount <- split(TumAltCount, rep(1:ncol(TumAltCount), each = nrow(TumAltCount)))
locAll1 = matrix(cbind(
TumRefCount,
NorRefCount
))
View(locAll1)
locAll1 = matrix(c(
TumRefCount,
NorRefCount
))
View(locAll1)
View(locAll1)
locAll1 = matrix(c(
TumRefCount,
NorRefCount
),
ncol = 2)
View(locAll1)
locAll1 = matrix(c(
TumRefCount,
NorRefCount
),
ncol = 2,
dimnames=list(
names(mySNVs),
c('tumor', 'normal')
)
)
View(locAll1)
TumNormSample <- SummarizedExperiment(
assays=list(
lociAllele1Counts=matrix(
c(
TumRefCount,
NorRefCount
),
ncol = 2,
dimnames=list(
names(mySNVs),
c('tumor', 'normal')
)
),
lociAllele2Counts=matrix(
c(TumAltCount,
NorAltCount
),
ncol=2,
dimnames=list(
names(mySNVs),
c('tumor','normal')
)
),
rowData=mySNVs
)
)
locAll2 = matrix(c(
TumAltCount,
NorAltCount
),
ncol = 2,
dimnames=list(
names(mySNVs),
c('tumor', 'normal')
)
)
View(locAll2)
TumNormSample <- SummarizedExperiment(
assays=list(
lociAllele1Counts=matrix(
c(
TumRefCount,
NorRefCount
),
ncol = 2,
dimnames=list(
names(mySNVs),
c('tumor', 'normal')
)
),
lociAllele2Counts=matrix(
c(TumAltCount,
NorAltCount
),
ncol=2,
dimnames=list(
names(mySNVs),
c('tumor','normal')
)
)
)
rowData=mySNVs
)
TumNormSample <- SummarizedExperiment(
assays=list(
lociAllele1Counts=matrix(
c(
TumRefCount,
NorRefCount
),
ncol = 2,
dimnames=list(
names(mySNVs),
c('tumor', 'normal')
)
),
lociAllele2Counts=matrix(
c(TumAltCount,
NorAltCount
),
ncol=2,
dimnames=list(
names(mySNVs),
c('tumor','normal')
)
)
),
rowData=mySNVs
)
AES_res_2s <- runMBASED(ASESummarizedExperiment =TumNormSample,isPhased=F,numSim=10^6,BPPARAM = SerialParam())
library(Biostrings)
fasta_file <- read.delim(file="/Volumes/Salendra_Work/Projects/tcga_ENVE/GRCh37-lite.fa", header=F,sep="\t")
rm(list=ls())
require(stringr)
require(IRanges)
require(ggplot2)
require(grid)
data_path = "/Projects/MODE_Correction_Analysis/AA-CRC-mode_correction_analysis/AA-CRC-MODE-CORRECTION/temp/VarScan_CNA/NormalNormal/chr_ALLNormNorm"
d
rm(list=ls())
require(stringr)
require(IRanges)
require(ggplot2)
require(grid)
data_path = "/Projects/MODE_Correction_Analysis/AA-CRC-mode_correction_analysis/AA-CRC-MODE-CORRECTION/temp/VarScan_CNA/NormalNormal/chr_ALLNormNorm"
setwd(data_path)
chrs = c("chr1", "chr2","chr3","chr4","chr5","chr6","chr7","chr8","chr9","chr10","chr11","chr12","chr13","chr14","chr15","chr16","chr17","chr18","chr19",
"chr20","chr21","chr22","chrX","chrY")
all_segs = NULL
for (i in 1:length(chrs)) {
tmp = read.delim(paste(chrs[i],"_AllNormNormSamps_SegMeans_CDSFilt.txt",sep=""), sep ="\t", header=F)
all_segs = rbind(all_segs, tmp)
}
all_segs_filt = all_segs[which(as.numeric(all_segs[,5])>=50),]
head(all_segs)
all_segs_filt = all_segs[which(as.numeric(all_segs[,5])>=50),]
my.data= as.numeric(all_segs_filt[,6])
my.hist <- hist(my.data, breaks=200, yaxt='n', ylab="", main="", xlab="")
prob = my.hist$counts/length(my.data)
ymax = max(prob)
df.data = data.frame(x=my.hist$mids, y=prob)
p1<-ggplot(data=df.data, aes(x=x,y=y)) + geom_bar(colour="grey50", fill = "grey50", stat="identity")
p1<-p1+theme_bw()+theme(axis.ticks.length=unit(3,"mm"), plot.margin=unit(c(1,1,1,1), "cm"))+theme(legend.position = "none")
p1<-p1+theme(panel.grid = element_blank())
p1<-p1+scale_y_continuous(limits=c(0, ymax),labs(x = "",  y = ""))
p1<-p1+scale_x_continuous(limits=c(floor(min(my.hist$mids)),ceiling(max(my.hist$mids)+0.001)), breaks= c(floor(min(my.hist$mids)):1:ceiling(max(my.hist$mids)+0.001)))
p1<-p1+theme(axis.text.y = element_text(family="Times", size = 28, angle = 90, hjust = 0.5, vjust = 0.5), axis.text.x = element_text(family="Times", size = 28, hjust = 0.5, vjust = 0.5))
#p1<-p1+theme(axis.text.y = element_blank(), axis.text.x = element_blank())
print(p1)
