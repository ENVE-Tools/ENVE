end = pos[,2]
Normal <- data.frame( probe=gatk$Target,
chr=chr,
probe_start=start,
probe_end=end,
targeted.base=end-start+1,
sequenced.base=NA,
coverage=as.numeric(gatk$total_coverage),
average.coverage=as.numeric(gatk$average_coverage),
base.with..10.coverage=NA)
i <- sapply(Normal, is.factor)
Normal[i] <- lapply(Normal[i], as.character)
file="/Projects/exomeCNV/ExomeCNV/exomeCNV/Tumor_output.coverage"
gatk = read.table(file,sep="\t", header=TRUE)
chrpos = data.frame(do.call('rbind', strsplit(as.character(gatk$Target),':',fixed=TRUE)))
chr = factor(paste("chr",chrpos[,1],sep=""))
pos = data.frame(do.call('rbind', strsplit(as.character(chrpos[,2]),'-',fixed=TRUE)))
pos[,2] <- ifelse(pos[,2] == "", pos[,2], pos[,1])
start = pos[,1]
end = pos[,2]
Tumor <- data.frame( probe=gatk$Target,
chr=chr,
probe_start=start,
probe_end=end,
targeted.base=end-start+1,
sequenced.base=NA,
coverage=as.numeric(gatk$total_coverage),
average.coverage=as.numeric(gatk$average_coverage),
base.with..10.coverage=NA)
i <- sapply(Tumor, is.factor)
Tumor[i] <- lapply(Tumor[i], as.character)
Tumor2 <- gsub("","NaN",Tumor)
demo.logR = calculate.logR(Normal, Tumor)
ecnv = classify.eCNV(Normal, Tumor, logR=demo.logR, min.spec=0.9999, min.sens=0.9999, option="spec", c=0.5, l=70)
View(Normal)
Normal2 <- Normal[which(Normal[,4]==""),]
is.na(Normal[,4])
!is.na(Normal[,4])
Normal2 <- Normal[is.na(Normal[,4]),]
Normal2 <- Normal[is.na(Normal[,3]),]
View(Normal)
ecnv = classify.eCNV(Normal, Tumor, logR=demo.logR, min.spec=0.5, min.sens=0.5, option="spec", c=0.5, l=70)
ecnv = classify.eCNV(Normal,Tumor,logR=demo.logR, min.spec=0.9999, min.sens=0.9999, option="spec", c=0.5, l=70)
covered.exon = (Normal$average.coverage > 0 & Tumor$average.coverage > 0)
covered.exon[is.na(covered.exon)] = FALSE
ecnv = classify.eCNV(normal=Normal,tumor=Tumor,logR=demo.logR, min.spec=0.9999, min.sens=0.9999, option="spec", c=0.5, l=70)
covered.exon[is.na(covered.exon)] = FALSE
logR=demo.logR
norm.log.ratio = if (is.null(logR)) { calculate.logR(normal, tumor, normal.chrs) } else { logR }
normal=Normal
tumor= Tumor
eCNV = normal[,c("probe", "chr", "probe_start", "probe_end", "coverage", "average.coverage", "targeted.base")]
eCNV$tumor.average.coverage = tumor$average.coverage
eCNV$logR = norm.log.ratio
eCNV$ratio = 2^norm.log.ratio
eCNV$copy.number = NA
eCNV$lower.cutoff = NA
eCNV$upper.cutoff = NA
eCNV$spec = NA
eCNV$sens = NA
View(eCNV)
min.spec=0.9999
min.sens=0.9999
for (i in 1:nrow(normal)) {
if (covered.exon[i]) {
rho = c + (1-c)*test.num.copy/2
chi = normal$average.coverage[i]
W = normal$targeted.base[i]
r = matrix(NA, nrow=length(rho), ncol=3, dimnames=list(rho,c("cutoff","spec","sens")))
for (j in 1:length(rho)) {
r[j,] = get.r.cutoff(chi, W, l, rho[j], min.spec, min.sens, option)
}
r = data.frame(r)
cn = classify.logR(norm.log.ratio[i], log2(r$cutoff))
eCNV$copy.number[i] = cn
eCNV$lower.cutoff[i] = if (is.nan(cn) || cn > 1) { r$cutoff[cn-1] } else { 0 }
eCNV$upper.cutoff[i] = r$cutoff[cn]
eCNV$spec[i] = if (is.nan(cn) || cn == 1) r$spec[cn] else r$spec[cn-1]
eCNV$sens[i] = if (is.nan(cn) || cn == 1) r$sens[cn] else r$sens[cn-1]
} else {
eCNV$copy.number[i] = 0 # zero to signify "no coverage"
eCNV$lower.cutoff[i] = NA
eCNV$upper.cutoff[i] = NA
eCNV$spec[i] = NA
eCNV$sens[i] = NA
}
}
c=0.5
l=70
for (i in 1:nrow(normal)) {
if (covered.exon[i]) {
rho = c + (1-c)*test.num.copy/2
chi = normal$average.coverage[i]
W = normal$targeted.base[i]
r = matrix(NA, nrow=length(rho), ncol=3, dimnames=list(rho,c("cutoff","spec","sens")))
for (j in 1:length(rho)) {
r[j,] = get.r.cutoff(chi, W, l, rho[j], min.spec, min.sens, option)
}
r = data.frame(r)
cn = classify.logR(norm.log.ratio[i], log2(r$cutoff))
eCNV$copy.number[i] = cn
eCNV$lower.cutoff[i] = if (is.nan(cn) || cn > 1) { r$cutoff[cn-1] } else { 0 }
eCNV$upper.cutoff[i] = r$cutoff[cn]
eCNV$spec[i] = if (is.nan(cn) || cn == 1) r$spec[cn] else r$spec[cn-1]
eCNV$sens[i] = if (is.nan(cn) || cn == 1) r$sens[cn] else r$sens[cn-1]
} else {
eCNV$copy.number[i] = 0 # zero to signify "no coverage"
eCNV$lower.cutoff[i] = NA
eCNV$upper.cutoff[i] = NA
eCNV$spec[i] = NA
eCNV$sens[i] = NA
}
}
test.num.copy=c(1,3)
for (i in 1:nrow(normal)) {
if (covered.exon[i]) {
rho = c + (1-c)*test.num.copy/2
chi = normal$average.coverage[i]
W = normal$targeted.base[i]
r = matrix(NA, nrow=length(rho), ncol=3, dimnames=list(rho,c("cutoff","spec","sens")))
for (j in 1:length(rho)) {
r[j,] = get.r.cutoff(chi, W, l, rho[j], min.spec, min.sens, option)
}
r = data.frame(r)
cn = classify.logR(norm.log.ratio[i], log2(r$cutoff))
eCNV$copy.number[i] = cn
eCNV$lower.cutoff[i] = if (is.nan(cn) || cn > 1) { r$cutoff[cn-1] } else { 0 }
eCNV$upper.cutoff[i] = r$cutoff[cn]
eCNV$spec[i] = if (is.nan(cn) || cn == 1) r$spec[cn] else r$spec[cn-1]
eCNV$sens[i] = if (is.nan(cn) || cn == 1) r$sens[cn] else r$sens[cn-1]
} else {
eCNV$copy.number[i] = 0 # zero to signify "no coverage"
eCNV$lower.cutoff[i] = NA
eCNV$upper.cutoff[i] = NA
eCNV$spec[i] = NA
eCNV$sens[i] = NA
}
}
option="spec"
for (i in 1:nrow(normal)) {
if (covered.exon[i]) {
rho = c + (1-c)*test.num.copy/2
chi = normal$average.coverage[i]
W = normal$targeted.base[i]
r = matrix(NA, nrow=length(rho), ncol=3, dimnames=list(rho,c("cutoff","spec","sens")))
for (j in 1:length(rho)) {
r[j,] = get.r.cutoff(chi, W, l, rho[j], min.spec, min.sens, option)
}
r = data.frame(r)
cn = classify.logR(norm.log.ratio[i], log2(r$cutoff))
eCNV$copy.number[i] = cn
eCNV$lower.cutoff[i] = if (is.nan(cn) || cn > 1) { r$cutoff[cn-1] } else { 0 }
eCNV$upper.cutoff[i] = r$cutoff[cn]
eCNV$spec[i] = if (is.nan(cn) || cn == 1) r$spec[cn] else r$spec[cn-1]
eCNV$sens[i] = if (is.nan(cn) || cn == 1) r$sens[cn] else r$sens[cn-1]
} else {
eCNV$copy.number[i] = 0 # zero to signify "no coverage"
eCNV$lower.cutoff[i] = NA
eCNV$upper.cutoff[i] = NA
eCNV$spec[i] = NA
eCNV$sens[i] = NA
}
}
i = 1
if (covered.exon[i]) {
rho = c + (1-c)*test.num.copy/2
chi = normal$average.coverage[i]
W = normal$targeted.base[i]
r = matrix(NA, nrow=length(rho), ncol=3, dimnames=list(rho,c("cutoff","spec","sens")))
for (j in 1:length(rho)) {
r[j,] = get.r.cutoff(chi, W, l, rho[j], min.spec, min.sens, option)
}
r = data.frame(r)
cn = classify.logR(norm.log.ratio[i], log2(r$cutoff))
eCNV$copy.number[i] = cn
eCNV$lower.cutoff[i] = if (is.nan(cn) || cn > 1) { r$cutoff[cn-1] } else { 0 }
eCNV$upper.cutoff[i] = r$cutoff[cn]
eCNV$spec[i] = if (is.nan(cn) || cn == 1) r$spec[cn] else r$spec[cn-1]
eCNV$sens[i] = if (is.nan(cn) || cn == 1) r$sens[cn] else r$sens[cn-1]
} else {
eCNV$copy.number[i] = 0 # zero to signify "no coverage"
eCNV$lower.cutoff[i] = NA
eCNV$upper.cutoff[i] = NA
eCNV$spec[i] = NA
eCNV$sens[i] = NA
}
i = 1
rho = c + (1-c)*test.num.copy/2
chi = normal$average.coverage[i]
W = normal$targeted.base[i]
r = matrix(NA, nrow=length(rho), ncol=3, dimnames=list(rho,c("cutoff","spec","sens")))
for (j in 1:length(rho)) {
r[j,] = get.r.cutoff(chi, W, l, rho[j], min.spec, min.sens, option)
}
View(r)
j=1
r[j,] = get.r.cutoff(chi, W, l, rho[j], min.spec, min.sens, option)
View(normal)
rm(list=ls())
require(ExomeCNV)
require(DNAcopy)
chr.list = as.matrix(c('chr1',
'chr2',
'chr3',
'chr4',
'chr5',
'chr6',
'chr7',
'chr8',
'chr9',
'chr10',
'chr11',
'chr12',
'chr13',
'chr14',
'chr15',
'chr16',
'chr17',
'chr18',
'chr19',
'chr20',
'chr21',
'chr22',
'chrX',
'chrY'))
file="/Projects/exomeCNV/ExomeCNV/exomeCNV/Normal_output.coverage"
gatk = read.table(file,sep="\t", header=TRUE)
View(gatk)
chrpos = data.frame(do.call('rbind', strsplit(as.character(gatk$Target),':',fixed=TRUE)))
chr = factor(paste("chr",chrpos[,1],sep=""))
pos = data.frame(do.call('rbind', strsplit(as.character(chrpos[,2]),'-',fixed=TRUE)))
pos[,2] <- ifelse(pos[,2] == "", pos[,2], pos[,1])
start = pos[,1]
end = pos[,2]
Normal <- data.frame( probe=gatk$Target,
chr=chr,
probe_start=start,
probe_end=end,
targeted.base=end-start+1,
sequenced.base=NA,
coverage=as.numeric(gatk$total_coverage),
average.coverage=as.numeric(gatk$average_coverage),
base.with..10.coverage=NA)
file="/Projects/exomeCNV/ExomeCNV/exomeCNV/Normal_output.coverage"
gatk = read.table(file,sep="\t", header=TRUE)
i <- sapply(gatk, is.factor)
gatk[i] <- lapply(gatk[i], as.character)
chrpos = data.frame(do.call('rbind', strsplit(as.character(gatk$Target),':',fixed=TRUE)))
chr = factor(paste("chr",chrpos[,1],sep=""))
pos = data.frame(do.call('rbind', strsplit(as.character(chrpos[,2]),'-',fixed=TRUE)))
pos[,2] <- ifelse(pos[,2] == "", pos[,2], pos[,1])
start = pos[,1]
end = pos[,2]
rm(list=ls())
require(ExomeCNV)
require(DNAcopy)
chr.list = as.matrix(c('chr1',
'chr2',
'chr3',
'chr4',
'chr5',
'chr6',
'chr7',
'chr8',
'chr9',
'chr10',
'chr11',
'chr12',
'chr13',
'chr14',
'chr15',
'chr16',
'chr17',
'chr18',
'chr19',
'chr20',
'chr21',
'chr22',
'chrX',
'chrY'))
file="/Projects/exomeCNV/ExomeCNV/exomeCNV/Normal_output.coverage"
gatk = read.table(file,sep="\t", header=TRUE)
i <- sapply(gatk, is.factor)
gatk[i] <- lapply(gatk[i], as.character)
chrpos = data.frame(do.call('rbind', strsplit(as.character(gatk$Target),':',fixed=TRUE)))
chr = paste("chr",chrpos[,1],sep="")
pos = data.frame(do.call('rbind', strsplit(as.character(chrpos[,2]),'-',fixed=TRUE)))
pos[,2] <- ifelse(pos[,2] == "", pos[,2], pos[,1])
start = pos[,1]
end = pos[,2]
Normal <- data.frame( probe=gatk$Target,
chr=chr,
probe_start=start,
probe_end=end,
targeted.base=end-start+1,
sequenced.base=NA,
coverage=as.numeric(gatk$total_coverage),
average.coverage=as.numeric(gatk$average_coverage),
base.with..10.coverage=NA)
View(Normal)
View(pos)
start = pos[,1]
i <- sapply(start, is.factor)
rm(list=ls())
require(ExomeCNV)
require(DNAcopy)
chr.list = as.matrix(c('chr1',
'chr2',
'chr3',
'chr4',
'chr5',
'chr6',
'chr7',
'chr8',
'chr9',
'chr10',
'chr11',
'chr12',
'chr13',
'chr14',
'chr15',
'chr16',
'chr17',
'chr18',
'chr19',
'chr20',
'chr21',
'chr22',
'chrX',
'chrY'))
file="/Projects/exomeCNV/ExomeCNV/exomeCNV/Normal_output.coverage"
gatk = read.table(file,sep="\t", header=TRUE)
i <- sapply(gatk, is.factor)
gatk[i] <- lapply(gatk[i], as.character)
chrpos = data.frame(do.call('rbind', strsplit(as.character(gatk$Target),':',fixed=TRUE)))
chr = factor(paste("chr",chrpos[,1],sep=""))
pos = data.frame(do.call('rbind', strsplit(as.character(chrpos[,2]),'-',fixed=TRUE)))
pos[,2] <- ifelse(pos[,2] == "", pos[,2], pos[,1])
start = as.integer(pos[,1])
end = as.integer(pos[,2])
Normal <- data.frame( probe=gatk$Target,
chr=chr,
probe_start=start,
probe_end=end,
targeted.base=end-start+1,
sequenced.base=NA,
coverage=as.numeric(gatk$total_coverage),
average.coverage=as.numeric(gatk$average_coverage),
base.with..10.coverage=NA)
i <- sapply(Normal, is.factor)
Normal[i] <- lapply(Normal[i], as.character)
file="/Projects/exomeCNV/ExomeCNV/exomeCNV/Tumor_output.coverage"
gatk = read.table(file,sep="\t", header=TRUE)
chrpos = data.frame(do.call('rbind', strsplit(as.character(gatk$Target),':',fixed=TRUE)))
chr = factor(paste("chr",chrpos[,1],sep=""))
pos = data.frame(do.call('rbind', strsplit(as.character(chrpos[,2]),'-',fixed=TRUE)))
pos[,2] <- ifelse(pos[,2] == "", pos[,2], pos[,1])
start = as.integer(pos[,1])
end = as.integer(pos[,2])
Tumor <- data.frame( probe=gatk$Target,
chr=chr,
probe_start=start,
probe_end=end,
targeted.base=end-start+1,
sequenced.base=NA,
coverage=as.numeric(gatk$total_coverage),
average.coverage=as.numeric(gatk$average_coverage),
base.with..10.coverage=NA)
View(Tumor)
View(Normal)
View(pos)
rm(list=ls())
require(ExomeCNV)
require(DNAcopy)
chr.list = as.matrix(c('chr1',
'chr2',
'chr3',
'chr4',
'chr5',
'chr6',
'chr7',
'chr8',
'chr9',
'chr10',
'chr11',
'chr12',
'chr13',
'chr14',
'chr15',
'chr16',
'chr17',
'chr18',
'chr19',
'chr20',
'chr21',
'chr22',
'chrX',
'chrY'))
file="/Projects/exomeCNV/ExomeCNV/exomeCNV/Normal_output.coverage"
gatk = read.table(file,sep="\t", header=TRUE)
# i <- sapply(gatk, is.factor)
# gatk[i] <- lapply(gatk[i], as.character)
chrpos = data.frame(do.call('rbind', strsplit(as.character(gatk$Target),':',fixed=TRUE)))
chr = factor(paste("chr",chrpos[,1],sep=""))
pos = data.frame(do.call('rbind', strsplit(as.character(chrpos[,2]),'-',fixed=TRUE)))
pos[,2] <- ifelse(pos[,2] == "", pos[,2], pos[,1])
View(pos)
start = as.integer(pos[,1])
end = as.integer(pos[,2])
Normal <- data.frame( probe=gatk$Target,
chr=chr,
probe_start=start,
probe_end=end,
targeted.base=end-start+1,
sequenced.base=NA,
coverage=as.numeric(gatk$total_coverage),
average.coverage=as.numeric(gatk$average_coverage),
base.with..10.coverage=NA)
View(Normal)
View(pos)
start = pos[,1]
start = as.numeric(pos[,1])
end = as.numeric(pos[,2])
View(pos)
rm(list=ls())
require(ExomeCNV)
require(DNAcopy)
chr.list = as.matrix(c('chr1',
'chr2',
'chr3',
'chr4',
'chr5',
'chr6',
'chr7',
'chr8',
'chr9',
'chr10',
'chr11',
'chr12',
'chr13',
'chr14',
'chr15',
'chr16',
'chr17',
'chr18',
'chr19',
'chr20',
'chr21',
'chr22',
'chrX',
'chrY'))
file="/Projects/exomeCNV/ExomeCNV/exomeCNV/Normal_output.coverage"
gatk = read.table(file,sep="\t", header=TRUE)
chrpos = data.frame(do.call('rbind', strsplit(as.character(gatk$Target),':',fixed=TRUE)))
chr = factor(paste("chr",chrpos[,1],sep=""))
pos = data.frame(do.call('rbind', strsplit(as.character(chrpos[,2]),'-',fixed=TRUE)))
View(pos)
start = as.numeric(pos[,1])
end = as.numeric(pos[,2])
Normal <- data.frame( probe=gatk$Target,
chr=chr,
probe_start=start,
probe_end=end,
targeted.base=end-start+1,
sequenced.base=NA,
coverage=as.numeric(gatk$total_coverage),
average.coverage=as.numeric(gatk$average_coverage),
base.with..10.coverage=NA)
View(Normal)
file="/Projects/exomeCNV/ExomeCNV/exomeCNV/Tumor_output.coverage"
gatk = read.table(file,sep="\t", header=TRUE)
chrpos = data.frame(do.call('rbind', strsplit(as.character(gatk$Target),':',fixed=TRUE)))
chr = factor(paste("chr",chrpos[,1],sep=""))
pos = data.frame(do.call('rbind', strsplit(as.character(chrpos[,2]),'-',fixed=TRUE)))
#pos[,2] <- ifelse(pos[,2] == "", pos[,2], pos[,1])
start = as.numeric(pos[,1])
end = as.numeric(pos[,2])
Tumor <- data.frame( probe=gatk$Target,
chr=chr,
probe_start=start,
probe_end=end,
targeted.base=end-start+1,
sequenced.base=NA,
coverage=as.numeric(gatk$total_coverage),
average.coverage=as.numeric(gatk$average_coverage),
base.with..10.coverage=NA)
demo.logR = calculate.logR(Normal, Tumor)
ecnv = classify.eCNV(normal=Normal,tumor=Tumor,logR=demo.logR, min.spec=0.9999, min.sens=0.9999, option="spec", c=0.5, l=70)
View(Normal)
View(Normal)
Sys.time()
View(ecnv)
rm(list=ls())
preENVE <- getwd()
preENVE <- '/Projects/ENVE-1.0-Beta/preENVE'
setwd(preENVE)
source(paste(preENVE,"Scripts","engine.R",sep='/'))
source(paste(preENVE,"Scripts","Settings.txt",sep='/'))
source(paste(preENVE,"Scripts","preENVE_PROJ_Config.txt",sep='/'))
dwnPack("plyr")
dir_create()
rm(list=ls())
preENVE <- getwd()
preENVE <- '/Projects/ENVE-1.0-Beta/preENVE'
setwd(preENVE)
source(paste(preENVE,"Scripts","engine.R",sep='/'))
source(paste(preENVE,"Scripts","Settings.txt",sep='/'))
source(paste(preENVE,"Scripts","preENVE_PROJ_Config.txt",sep='/'))
dwnPack("plyr")
dir_create()
TumNor_dataRatio_calc()
TumNorScript_gen(TumNor_samp_DataRatio)
